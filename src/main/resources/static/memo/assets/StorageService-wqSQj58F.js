var h=s=>{throw TypeError(s)};var m=(s,t,e)=>t.has(s)||h("Cannot "+e);var d=(s,t,e)=>(m(s,t,"read from private field"),e?e.call(s):t.get(s)),g=(s,t,e)=>t.has(s)?h("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(s):t.set(s,e),l=(s,t,e,r)=>(m(s,t,"write to private field"),r?r.call(s,e):t.set(s,e),e),a=(s,t,e)=>(m(s,t,"access private method"),e);var o,i,n,c;class f{constructor(t){g(this,i);g(this,o);if(!t)throw new Error("Please Enter the Storage Name");l(this,o,t)}addItem(t){const e=a(this,i,n).call(this),r={...t,id:e.nextId++,title:t.title,content:t.content,createdAt:new Date().toISOString()};e.items.push(r),a(this,i,c).call(this,e)}getItems(){return a(this,i,n).call(this).items}getItem(t){return a(this,i,n).call(this).items.find(e=>e.id===t)}setItem(t){const e=a(this,i,n).call(this);for(let r=0;r<e.items.length;r+=1)if(e.items[r].id===t.id){e.items[r]=t;break}a(this,i,c).call(this,e)}delItem(t){const e=a(this,i,n).call(this),r=e.items.findIndex(S=>S.id===t);r>-1&&(e.items.splice(r,1),a(this,i,c).call(this,e))}}o=new WeakMap,i=new WeakSet,n=function(){const t=localStorage.getItem(d(this,o));return t?JSON.parse(t):{items:[],nextId:1}},c=function(t){if(typeof t!="object"||t===null||Array.isArray(t))throw new Error("Memo data must be a non-null object");const e=JSON.stringify(t);localStorage.setItem(d(this,o),e)};export{f as S};
